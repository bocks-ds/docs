fs = require('fs');

const json_data = require('database/json_parser');
const env = require('env_vars');

const ABCDoc = require('abc_doc')


class TablesDoc extends ABCDoc {

    constructor(source_directory) {
        let target_file = `${source_directory}/structures.rst`
        super("Base Data Table Definitions", source_directory, target_file)
    }

    get_doc() {
        let doc = this._title()
        Object.keys(env.tableSingulars).sort().forEach((table_name) => {
            let table = new Table(table_name)
            doc = `${doc}${table.output()}\n`
        })
        return doc
    }
}

class Table {
    constructor(table_name){
        this.name = table_name
        this.object_name = env.tableSingulars[table_name]
    }

    output() {
        return this._title() + this._base_data() + '\n*****\n'
    }

    _title() {
        return `${this.name}\n${'*'.repeat(this.name.length)}\nColumns that may be queried:\n`
    }

    _base_data() {
        output = ''
        data = json_data.table_structures[this.name]
        Object.keys(data).forEach((column) => {
            let type = data[column]
            let info = ''
            if (type.includes("string")) {
                let str_len = type.split("string")
                info = `String with a maximum length of ${str_len[1]}`
            } else {
                info = type
            }
            output = `${output}\n - **${column}** - *${info}*\n`
        })
        return output
    }
}

module.exports = TablesDoc